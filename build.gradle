plugins {
    id "io.spring.dependency-management" version "$springDependencyManagementPluginVersion"
}

subprojects {
    group = "orderplanning"
    version = "0.1"

    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java-library"

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
        }
    }

    compileJava {
        sourceCompatibility = 11
        targetCompatibility = 11
        options.compilerArgs = [
                "-Amapstruct.unmappedTargetPolicy=IGNORE",
                "-Amapstruct.defaultComponentModel=spring"
        ]
    }

    dependencies {
        compileOnly("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")

        compileOnly("org.mapstruct:mapstruct:$mapstructVersion")
        annotationProcessor("org.mapstruct:mapstruct-processor:$mapstructVersion")

        implementation("org.springframework:spring-context")
        implementation("javax.validation:validation-api")

        //TEST DEPENDENCIES
        testImplementation("org.springframework.boot:spring-boot-starter-test") {
            exclude group: "junit" // excluding junit 4
        }
        testImplementation("org.junit.jupiter:junit-jupiter-api")
        testImplementation("org.junit.jupiter:junit-jupiter-engine")
        testImplementation("org.mockito:mockito-junit-jupiter")
    }

    test {
        jvmArgs("-Dspring.output.ansi.enabled=ALWAYS")
        useJUnitPlatform()
    }
}
